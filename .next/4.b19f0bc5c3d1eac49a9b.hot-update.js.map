{"version":3,"file":"4.b19f0bc5c3d1eac49a9b.hot-update.js","sources":["webpack:///pages/index.js"],"sourcesContent":["import React, {Component} from 'react';\nimport Layout from '../components/Layout'\nimport {\n  Button,\n  Divider,\n  Dropdown,\n  Grid,\n  Header,\n  Icon,\n  Image,\n  Label,\n  Menu,\n  Message,\n  Segment,\n  Table,\n  Input,\n  Checkbox\n} from 'semantic-ui-react'\n\nconst TransactionSearch = props => {\n  const {incoming, outgoing, blockNo, timeStamp, hash, value} = props.transactionOptions\n  return (\n    <Grid.Row>\n      <Grid.Column>\n        <Message>\n          <Header as='h1'>Search Transactions</Header>\n          <Grid.Column>\n            Transaction Options\n            <Grid.Row>\n              <Button color={incoming ? 'blue' : ''} onClick={()=>console.log('incoming')}>Incoming</Button>\n              <Button color={outgoing ? 'blue' : ''} onClick={()=>console.log('outgoing')}>Outgoing</Button>\n            </Grid.Row>\n            <Grid.Row>\n              <Checkbox label='Block #' checked={blockNo}/>\n              <Checkbox label='timestamp' checked={timeStamp} />\n              <Checkbox label='Hash' checked={hash}/>\n              <Checkbox label='Value' checked={value}/>\n            </Grid.Row>\n          </Grid.Column>\n          <div>\n            <Input placeholder='Address...' icon='search' value={props.address} onChange={e => props.addressUpdate(e.target.value)}/>\n            <Button color='blue' onClick={props.onSearch}>Search</Button>\n          </div>\n        </Message>\n      </Grid.Column>\n    </Grid.Row>\n  )\n}\n\nexport class Main extends Component {\n  state = {\n    search: null,\n    results: null,\n    address: '',\n    transactionOptions: {\n      incoming: false,\n      outgoing: false,\n      blockNo: false,\n      timeStamp: false,\n      hash: false,\n      value: false\n    }\n  }\n  searchTransactions = () => {\n    const {address} = this.state\n    console.log('graphql queries', address)\n  }\n\n  addressUpdate = (address) => {\n    this.setState({address})\n  }\n\n  searchTransactionsScreen = () => {\n    this.setState({ search: 'transactions'})\n  }\n\n  render(){\n    return (\n      <Layout>\n        <Grid container style={{ padding: '10em 0em' }}>\n          <Grid.Row>\n            <Grid.Column>\n              <Header as='h1' dividing>\n                Balanc3 Take Home App\n              </Header>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>\n              <Message>\n                <Header as='h1'>Search By Address</Header>\n                <p>\n                  Choose whether you want to look up transactions or balance of an address!\n                </p>\n                <Button color='blue' onClick={this.searchTransactionsScreen}>Transactions</Button>\n                <Button color='blue'>Balance</Button>\n              </Message>\n            </Grid.Column>\n          </Grid.Row>\n          {this.state.search === 'transactions' && (\n            <TransactionSearch\n              onSearch={this.searchTransactions}\n              addressUpdate={this.addressUpdate}\n              address={this.state.address}\n              transactionOptions={this.state.transactionOptions}\n            />)\n          }\n          {this.state.search === 'balance' && (\n            <TransactionSearch\n              onSearch={this.searchTransactions}\n              addressUpdate={this.addressUpdate}\n              address={this.state.address}\n              transactionOptions={this.state.transactionOptions}\n            />)\n          }\n          {this.state.results}\n        </Grid>\n      </Layout>\n    );\n  }\n}\n\nexport default Main\n\n\n\n/*\n<Checkbox label='Block #' />\n<Checkbox label='timestamp' />\n<Checkbox label='Hash' />\n<Checkbox label='Value' />\n{\n    blockNumber: '5482806',\n    timeStamp: '1524355385',\n    hash: '0x6f379d3afe3a9fd0a8086adc61e1a2d1f74393fe2efe5b39179e4204c9e9a15d',\n    nonce: '9086397',\n    blockHash: '0xfe5e7b45b6b13bf855c7be25cfd301d870e8d4dd2fdc149374edc7fe041f159a',\n    transactionIndex: '2',\n    from: '0xea674fdde714fd979de3edf0f56aa9716b898ec8',\n    to: '0x96d978f81d962770d2379240899808f396856589',\n    value: '50788367621613343',\n    gas: '50000',\n    gasPrice: '1000000000',\n    isError: '0',\n    txreceipt_status: '1',\n    input: '0x',\n    contractAddress: '',\n    cumulativeGasUsed: '63000',\n    gasUsed: '21000',\n    confirmations: '596571' }\n */\n\n\n\n// WEBPACK FOOTER //\n// pages/index.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAgcA;AAEA;AACA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAoBA;AAAA;AAAA;AACA;AArBA;AAAA;AAAA;AAAA;AAAA;AAwBA;AAAA;AAAA;AACA;AAzBA;AAAA;AACA;AADA;AAAA;AAAA;AA4BA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAWA;AAtEA;AACA;AADA;AAAA;AAyEA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}